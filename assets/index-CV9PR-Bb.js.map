{"version":3,"file":"index-CV9PR-Bb.js","sources":["../../src/utils/helpers/removeDuplicates.ts","../../src/app/components/baseComponent.ts","../../src/assets/logo-img.png","../../src/utils/consts/text.ts","../../src/utils/helpers/mergeClassLists.ts","../../src/utils/helpers/mergeChildrenLists.ts","../../src/app/components/logo/logoComponent.ts","../../src/utils/helpers/throwError.ts","../../src/services/localStorageProvider.ts","../../src/services/auth.ts","../../src/app/components/authAction/authActionComponent.ts","../../src/app/viewsComponents/header/header.ts","../../src/app/components/banner/bannerComponent.ts","../../src/assets/banner-img.png","../../src/app/components/logoLink/logoLinkComponent.ts","../../src/assets/rs-logo.png","../../src/assets/gh-logo.png","../../src/app/components/button/buttonComponent.ts","../../src/app/viewsComponents/startPageContent/startPageContent.ts","../../src/app/viewsComponents/footer/footer.ts","../../src/app/views/startPage.ts","../../src/assets/login-page-img.png","../../src/utils/helpers/loginPageValidator.ts","../../src/app/viewsComponents/LoginPageContent/LoginPageContent.ts","../../src/app/views/loginPage.ts","../../src/assets/puzzle-texture.jpg","../../src/utils/helpers/waitImages.ts","../../src/app/components/puzzle/puzzelComponentEvents.ts","../../src/app/components/puzzle/puzzleComponent.ts","../../src/utils/helpers/widthByStrLenght.ts","../../src/utils/helpers/drawPuzzle.ts","../../src/app/components/board/fillBoard.ts","../../src/utils/helpers/arrayShuffle.ts","../../src/app/components/loader/loaderComponent.ts","../../src/app/components/board/boardComponent.ts","../../src/services/api.ts","../../src/app/components/playVoiceButton/playVoiceButtonComponent.ts","../../src/app/components/boardControl/boardControlComponent.ts","../../src/app/components/statisticModal/statisticModalComponent.ts","../../src/app/viewsComponents/gamePageContent/gamePageContent.ts","../../src/app/views/gamePage.ts","../../src/utils/consts/routes.ts","../../src/utils/helpers/getRouteByPath.ts","../../src/services/router.ts","../../src/main.ts"],"sourcesContent":["function removeDuplicates<T>(arr: T[]): T[] {\n    return arr.filter((item, index) => arr.lastIndexOf(item) === index);\n}\n\nexport default removeDuplicates;\n","import removeDuplicates from '@utils/helpers/removeDuplicates';\n\nexport type IProps<T extends HTMLElement = HTMLElement> = Partial<\n    Omit<T, 'style' | 'dataset' | 'classList' | 'children' | 'tagName'>\n> & {\n    [key: PropertyKey]: unknown;\n    tag?: keyof HTMLElementTagNameMap;\n    classList?: TClassList;\n    textContent?: string;\n    children?: TChildren;\n    style?: Partial<CSSStyleDeclaration>;\n};\n\nexport type TClassList = string[] | string;\nexport type TChildren = (BaseComponent | string)[] | string | BaseComponent | undefined;\n\nexport class BaseComponent<T extends HTMLElement = HTMLElement> {\n    protected node: T;\n\n    props: IProps<T>;\n\n    protected children: BaseComponent[] = [];\n\n    protected parent: BaseComponent | null = null;\n\n    constructor(props: IProps<T>) {\n        this.props = props;\n        this.node = this.createNode(props);\n    }\n\n    protected createNode({\n        tag,\n        style,\n        classList,\n        textContent,\n        children,\n        ...props\n    }: IProps<T>): T {\n        this.props = { tag, classList, textContent, children, ...props } as IProps<T>;\n        let node = document.createElement(tag ?? 'div') as T;\n        node = Object.assign(node, props);\n        if (classList) {\n            this.applyClassList(node, classList);\n        }\n        if (textContent) {\n            node.textContent = textContent;\n        }\n        if (children) {\n            this.children = this.appendChildrenToNode(node, children);\n        }\n        if (style) {\n            Object.entries(style).forEach(([key, value]) => {\n                if (value) {\n                    const stringValue = String(value);\n                    node.style.setProperty(key, stringValue);\n                }\n            });\n        }\n        this.children = removeDuplicates(this.children).filter((child) =>\n            this.isChild(child),\n        );\n        return node;\n    }\n\n    isChild(child: BaseComponent): boolean {\n        return child.parent === this;\n    }\n\n    public appendChildren(children: NonNullable<TChildren>): this {\n        if (Array.isArray(children)) {\n            children.forEach((child) => this.append(child));\n        } else {\n            this.append(children);\n        }\n        return this;\n    }\n\n    public append(child: BaseComponent | string): this {\n        const addedNode = this.appendToNode(this.node, child);\n        if (addedNode) {\n            this.children.push(addedNode);\n        }\n\n        this.children = removeDuplicates(this.children).filter((item) =>\n            this.isChild(item),\n        );\n        return this;\n    }\n\n    public addEventListener<K extends keyof HTMLElementEventMap>(\n        type: K,\n        listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => void,\n        options?: boolean | AddEventListenerOptions | undefined,\n    ): this {\n        this.node.addEventListener(type, listener, options);\n        return this;\n    }\n\n    log(): this {\n        console.log(this);\n        return this;\n    }\n\n    public getNode(): T {\n        return this.node;\n    }\n\n    public getChildren(): BaseComponent[] {\n        return this.children;\n    }\n\n    public addClass(classNameClassName: string): this {\n        this.node.classList.add(classNameClassName);\n        return this;\n    }\n\n    public toggleClass(classSurname: string): void {\n        this.node.classList.toggle(classSurname);\n    }\n\n    public removeClass(className: string): void {\n        this.node.classList.remove(className);\n    }\n\n    public destroy(): void {\n        this.parent?.removeChildren(this);\n        this.children.forEach((child) => child.destroy());\n        this.node.remove();\n    }\n\n    private applyClassList(node: T, classList: TClassList): void {\n        if (typeof classList === 'string') {\n            node.classList.add(classList);\n        } else {\n            node.classList.add(...classList);\n        }\n    }\n\n    private appendChildrenToNode(\n        node: T,\n        children: NonNullable<TChildren>,\n    ): BaseComponent[] | [] {\n        const result: BaseComponent[] = [];\n        if (Array.isArray(children)) {\n            children.forEach((child) => {\n                const addedNode = this.appendToNode(node, child);\n                if (addedNode) {\n                    result.push(addedNode);\n                }\n            });\n        } else {\n            const addedNode = this.appendToNode(node, children);\n            if (addedNode !== undefined) {\n                result.push(addedNode);\n            }\n        }\n        return result;\n    }\n\n    private appendToNode(node: T, child: BaseComponent | string): BaseComponent | void {\n        if (typeof child === 'string') {\n            node.append(document.createTextNode(child));\n            return undefined;\n        }\n        child.parent?.removeChildren(child);\n        child.parent = this;\n        node.append(child.node);\n        return child;\n    }\n\n    public haveChildren(child: BaseComponent): boolean {\n        return this.children.some((item) => item.getNode().isEqualNode(child.getNode()));\n    }\n\n    public haveChildrenNode(node: Element): boolean {\n        return Array.from(this.node.children).some((item) => item.isEqualNode(node));\n    }\n\n    public isNode(node: Element) {\n        return this.node.isEqualNode(node);\n    }\n\n    public replaceWith(component: BaseComponent<T>): this {\n        if (this.parent) {\n            this.parent.children.filter(\n                (item) => !item.getNode().isEqualNode(component.getNode()),\n            );\n            this.parent = component.parent;\n        }\n        if (component.parent) {\n            component.parent.children.filter(\n                (item) => !item.getNode().isEqualNode(this.getNode()),\n            );\n            component.parent = this.parent;\n        }\n        [this.node, component.node] = [component.node, this.node];\n        this.node.replaceWith(component.node);\n        return this;\n    }\n\n    public removeChildren(child: BaseComponent): this {\n        child.getNode().remove();\n        this.children = this.children.filter(\n            (item) => !item.getNode().isEqualNode(child.getNode()),\n        );\n        child.parent = null;\n        return this;\n    }\n\n    public remove() {\n        this.getNode().remove();\n    }\n\n    componentDidMount(callback: (elem: this) => void): this {\n        new Promise((resolve) => {\n            const observer = new MutationObserver((_, obs) => {\n                if (this.node) {\n                    resolve(this);\n                    obs.disconnect();\n                }\n            });\n            observer.observe(document.body, { childList: true, subtree: true });\n        })\n            .then(() => callback(this))\n            .catch((err) => console.error(err));\n\n        return this;\n    }\n}\n\nexport type FunctionComponent<\n    ElementType extends HTMLElement = HTMLElement,\n    AdditionalProps = Record<PropertyKey, unknown>,\n    BaseComponentType extends BaseComponent<ElementType> = BaseComponent<ElementType>,\n> = (props: IProps<ElementType> & AdditionalProps) => BaseComponentType;\nconst createComponent = <ElementType extends HTMLElement = HTMLElement>(\n    props: IProps<ElementType>,\n) => new BaseComponent<ElementType>(props);\nexport default createComponent;\n","export default \"__VITE_ASSET__BtPjOiYZ__\"","enum TextStrings {\n    siteName = 'capyPuzzle',\n    footerText = `© 2024 ${siteName}.`,\n    startPageAboutDescription = 'Наши пазлы – это необычный способ учить английский. Собирайте предложения, как пазлы. Каждый пазл – это новое слово, которое вы запомните. А чтобы вас еще больше вдохновляло, по мере сбора слов, открываются красочные картинки. Играйте и учитесь вместе с capyPuzzle! 🧩🔤',\n    startPageAboutTitle = 'Сapy Puzzle: Игра для изучения английского через сбор пазлов',\n    startPageAboutLInks = 'Ссылки:',\n}\n\nexport default TextStrings;\n","const mergeClassLists = (...classLists: (string | string[] | undefined)[]): string[] => {\n    const result: string[] = [];\n    classLists.forEach((item) => {\n        if (typeof item === 'string') {\n            result.push(item);\n        }\n        if (Array.isArray(item)) {\n            result.push(...item);\n        }\n    });\n    return result;\n};\n\nexport default mergeClassLists;\n","import { TChildren } from '@components/baseComponent.ts';\n\nconst mergeChildrenLists = (...classLists: TChildren[]): TChildren => {\n    const result: NonNullable<TChildren> = [];\n    classLists.forEach((item) => {\n        if (Array.isArray(item)) {\n            result.concat(item);\n        } else if (item !== undefined) {\n            result.push(item);\n        }\n    });\n    return result;\n};\n\nexport default mergeChildrenLists;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport logo from '@assets/logo-img.png';\nimport TextStrings from '@utils/consts/text';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport style from './logo.module.scss';\n\nconst logoComponent: FunctionComponent = ({ classList, children, ...props }) => {\n    const logoImg = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: style['site-logo__img'],\n        src: logo,\n        alt: `logo ${TextStrings.siteName}`,\n    });\n    const logoText = createComponent<HTMLSpanElement>({\n        tag: 'span',\n        classList: style['site-logo__text'],\n        textContent: TextStrings.siteName,\n    });\n    return createComponent({\n        tag: 'a',\n        classList: mergeClassLists(style['site-logo'], classList),\n        children: mergeChildrenLists(logoImg, logoText, children),\n        ...props,\n    });\n};\n\nexport default logoComponent;\n","const throwError = (message: string) => {\n    throw new Error(message);\n};\n\nexport default throwError;\n","import ILocalStorageModel from '@models/ILocalStorageModel';\nimport throwError from '@utils/helpers/throwError';\n\nclass LocalStorageProvider {\n    private static instance: LocalStorageProvider;\n\n    private prefix = 'capyPuzzle';\n\n    private version = '1.0.1';\n\n    private state: ILocalStorageModel;\n\n    public stateProxy: ILocalStorageModel;\n\n    static create(): LocalStorageProvider {\n        if (LocalStorageProvider.instance) {\n            throwError('Local storage provider already created');\n        }\n        LocalStorageProvider.instance = new LocalStorageProvider();\n        return LocalStorageProvider.instance;\n    }\n\n    static getIsInitialized() {\n        return !!LocalStorageProvider.instance;\n    }\n\n    private constructor() {\n        this.state = this.createOrGetState();\n        this.stateProxy = this.createProxy();\n    }\n\n    private createOrGetState() {\n        const localStorageState = localStorage.getItem(this.getStorageKey());\n        if (!this.state && localStorageState) {\n            this.state = JSON.parse(localStorageState) as ILocalStorageModel;\n        }\n\n        if (!this.state) {\n            this.state = {\n                session: {\n                    isAuth: false,\n                    userId: null,\n                },\n                users: {},\n                saveData: {},\n                totalUser: 0,\n            };\n            localStorage.setItem(this.getStorageKey(), JSON.stringify(this.state));\n        }\n        return this.state;\n    }\n\n    private getStorageKey() {\n        return `${this.prefix}@${this.version}:data`;\n    }\n\n    private createProxy(): ILocalStorageModel {\n        const proxy = <T extends Record<PropertyKey, unknown>>(obj: T): T =>\n            new Proxy(obj, {\n                set: (target, prop, value: unknown) => {\n                    const tempTarget = target as Record<PropertyKey, unknown>;\n                    tempTarget[prop] = value;\n                    localStorage.setItem(\n                        this.getStorageKey(),\n                        JSON.stringify(this.state),\n                    );\n                    return true;\n                },\n                get: (target, prop) => {\n                    if (typeof target[prop] === 'object') {\n                        return proxy(target[prop] as T);\n                    }\n\n                    this.createOrGetState();\n                    return target[prop];\n                },\n            });\n\n        return proxy(this.state);\n    }\n\n    static getInstance() {\n        return LocalStorageProvider.instance;\n    }\n}\n\nexport const useLocalStorageProvider = () => {\n    if (!LocalStorageProvider.getIsInitialized()) {\n        throwError('Local storage provider not created');\n    }\n    const provider = LocalStorageProvider.getInstance();\n    return {\n        state: provider.stateProxy,\n        isInitialized: LocalStorageProvider.getIsInitialized(),\n    };\n};\nexport const createLocalStorageProvider = () => {\n    LocalStorageProvider.create();\n    return useLocalStorageProvider();\n};\n","import { useLocalStorageProvider } from '@services/localStorageProvider.ts';\n\nimport { ISession, IUser } from '@models/ILocalStorageModel';\nimport throwError from '@utils/helpers/throwError';\nimport ISaveDataModel from '@models/ISaveDataModel.ts';\n\nexport enum AuthAction {\n    login = 'login',\n    logout = 'logout',\n    signup = 'signup',\n}\n\nexport enum AuthMessage {\n    userAlreadyExist = 'User already exist',\n    incorrectFormat = 'Incorrect format',\n    allOk = 'All ok',\n    userNotExist = 'User not exist',\n}\n\nexport interface IAuthResult {\n    success: boolean;\n    action: AuthAction;\n    messages: AuthMessage[];\n}\nclass AuthProvider {\n    private static instance: AuthProvider;\n\n    public static create(): AuthProvider {\n        if (AuthProvider.instance) {\n            throwError('Auth Provider already created');\n        }\n        if (!useLocalStorageProvider().isInitialized) {\n            throwError('For a AuthProvider work, initiate localStorageProvider first');\n        }\n        AuthProvider.instance = new AuthProvider();\n        return AuthProvider.instance;\n    }\n\n    static getIsInitialized() {\n        return !!AuthProvider.instance;\n    }\n\n    getIsAuth() {\n        return useLocalStorageProvider().state.session.isAuth;\n    }\n\n    public singUp(\n        name: string,\n        surname: string,\n        callback: (reason: IAuthResult) => void,\n    ): void {\n        const { state } = useLocalStorageProvider();\n        const error: IAuthResult = {\n            success: false,\n            action: AuthAction.signup,\n            messages: [],\n        };\n        Object.keys(state.users).some((key) => {\n            const user = state.users[key];\n            if (user && user.surname === surname && user.name === name) {\n                error.messages.push(AuthMessage.userAlreadyExist);\n                return true;\n            }\n\n            return false;\n        });\n        const regExp = /^[A-Z][A-z-]*$/;\n\n        if (\n            !regExp.test(name) ||\n            !regExp.test(surname) ||\n            name.length < 3 ||\n            surname.length < 4\n        ) {\n            error.messages.push(AuthMessage.incorrectFormat);\n        }\n\n        if (error.messages.length > 0) {\n            callback(error);\n            return;\n        }\n        state.totalUser += 1;\n\n        state.users[state.totalUser] = {\n            name,\n            surname,\n            saveDataId: state.totalUser,\n        };\n\n        state.saveData = {};\n        state.saveData[state.totalUser] = {\n            showPuzzle: true,\n            audioOn: true,\n            translateTextOn: true,\n        };\n\n        state.session.isAuth = true;\n        state.session.userId = state.totalUser;\n        callback({\n            success: true,\n            action: AuthAction.signup,\n            messages: [AuthMessage.allOk],\n        });\n    }\n\n    public logout(callback: (reason: IAuthResult) => void) {\n        const { session } = useLocalStorageProvider().state;\n        session.isAuth = false;\n        session.userId = null;\n        callback({\n            success: true,\n            action: AuthAction.logout,\n            messages: [AuthMessage.allOk],\n        });\n    }\n\n    public getUser(): { user: IUser; savedData: ISaveDataModel } | never | void {\n        const { state } = useLocalStorageProvider();\n        if (this.getIsAuth()) {\n            const user = state.users[state.session.userId as number]!;\n            const savedData = state.saveData[user.saveDataId as number]!;\n            return { user, savedData };\n        }\n        return undefined;\n    }\n\n    public login(name: string, surname: string, callback: (reason: IAuthResult) => void) {\n        const { state } = useLocalStorageProvider();\n        const userExist = Object.keys(state.users).some((key) => {\n            const user = state.users[key];\n            if (user && user.surname === surname && user.name === name) {\n                state.session.isAuth = true;\n                state.session.userId = key;\n                return true;\n            }\n\n            return false;\n        });\n        if (userExist) {\n            callback({\n                success: true,\n                action: AuthAction.login,\n                messages: [AuthMessage.allOk],\n            });\n        } else {\n            callback({\n                success: false,\n                action: AuthAction.login,\n                messages: [AuthMessage.userNotExist],\n            });\n        }\n    }\n\n    static getInstance() {\n        return AuthProvider.instance;\n    }\n\n    static getDefaultSessionObject(): ISession {\n        return {\n            isAuth: false,\n            userId: null,\n        };\n    }\n}\n\nexport const useAuthProvider = () => {\n    if (!AuthProvider.getInstance()) {\n        throwError('Auth Provider not created');\n    }\n    const auth = AuthProvider.getInstance();\n    return {\n        isAuth: auth.getIsAuth(),\n        singUp: auth.singUp.bind(auth),\n        logout: auth.logout.bind(auth),\n        login: auth.login.bind(auth),\n        user: auth.getUser()?.user,\n        saveData: auth.getUser()?.savedData,\n        isInitialized: AuthProvider.getIsInitialized(),\n    };\n};\n\nexport const createAuthProvider = () => {\n    AuthProvider.create();\n    return useAuthProvider();\n};\n","import createComponent from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport { useAuthProvider } from '@services/auth';\nimport { useRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport style from './authAction.module.scss';\n\nconst authActionComponent: typeof createComponent<HTMLButtonElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { isAuth, logout } = useAuthProvider();\n    const { route } = useRouter();\n\n    const authLink = createComponent<HTMLLinkElement>({\n        tag: 'a',\n        classList: style['auth-action__link'],\n        textContent: isAuth ? `Выйти` : `Войти`,\n    }).addEventListener('click', () =>\n        isAuth ? logout(() => route(Routes.startPage)) : route(Routes.loginPage),\n    );\n\n    return createComponent({\n        tag: 'div',\n        classList: mergeClassLists(style['auth-action'], classList),\n        children: mergeChildrenLists(authLink, children),\n        ...props,\n    });\n};\nexport default authActionComponent;\n","import createComponent from '@components/baseComponent';\nimport logoComponent from '@components/logo/logoComponent';\nimport authActionComponent from '@components/authAction/authActionComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport { useRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport style from './header.module.scss';\n\nconst header: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { route } = useRouter();\n\n    const logo = logoComponent({}).addEventListener('click', () =>\n        route(Routes.startPage),\n    );\n\n    const authAction = authActionComponent({});\n\n    const content = createComponent<HTMLDivElement>({\n        tag: 'div',\n        classList: style['header__content'],\n        children: [logo, authAction],\n    });\n\n    return createComponent({\n        tag: 'header',\n        classList: mergeClassLists(style['header'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    });\n};\nexport default header;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport style from './banner.module.scss';\n\nconst bannerComponent: FunctionComponent<HTMLDivElement, { imgSrc: string }> = ({\n    classList,\n    children,\n    imgSrc,\n    ...props\n}) => {\n    const image = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: style['banner__image'],\n        src: imgSrc,\n        alt: 'banner',\n    });\n\n    return createComponent({\n        tag: 'div',\n        classList: mergeClassLists(style['banner'], classList),\n        children: mergeChildrenLists(image, children),\n        ...props,\n    });\n};\nexport default bannerComponent;\n","export default \"__VITE_ASSET__CgqXtAD8__\"","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport style from './logoLink.module.scss';\n\nconst logoLinkComponent: FunctionComponent<\n    HTMLLinkElement,\n    { altText: string; imgSrc: string }\n> = ({ classList, children, altText, imgSrc, ...props }) => {\n    const linkImg = createComponent<HTMLImageElement>({\n        tag: 'img',\n        src: imgSrc,\n        alt: altText,\n        classList: style['logo-link__img'],\n    });\n    return createComponent({\n        tag: 'a',\n        classList: mergeClassLists(style['logo-link'], classList),\n        children: mergeChildrenLists(linkImg, children),\n        ...props,\n    });\n};\nexport default logoLinkComponent;\n","export default \"__VITE_ASSET__BF6VCBj___\"","export default \"__VITE_ASSET__BJzIbXjs__\"","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './button.module.scss';\n\nconst buttonComponent: FunctionComponent<HTMLButtonElement> = ({\n    classList,\n    children,\n    ...props\n}) =>\n    createComponent({\n        tag: 'button',\n        classList: mergeClassLists(style['button'], classList),\n        children,\n        ...props,\n    });\nexport default buttonComponent;\n","import createComponent from '@components/baseComponent.ts';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport bannerComponent from '@components/banner/bannerComponent';\nimport bannerImg from '@assets/banner-img.png';\nimport TextStrings from '@utils/consts/text';\nimport logoLinkComponent from '@components/logoLink/logoLinkComponent';\nimport rsLogoImg from '@assets/rs-logo.png';\nimport gitLogoImg from '@assets/gh-logo.png';\nimport buttonComponent from '@components/button/buttonComponent';\nimport { useAuthProvider } from '@services/auth';\nimport { useRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport style from './startPageContent.module.scss';\n\nconst startPageContent: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { isAuth, user } = useAuthProvider();\n    const { route } = useRouter();\n    const aboutGameWrapper = createComponent({\n        tag: 'div',\n        classList: style['about-game__wrapper'],\n        children: [\n            createComponent({\n                tag: 'div',\n                classList: style['about-game__text'],\n                children: [\n                    createComponent({\n                        tag: 'h2',\n                        textContent: TextStrings.startPageAboutTitle,\n                        classList: style['about-game__title'],\n                    }),\n                    createComponent({\n                        tag: 'p',\n                        textContent: isAuth\n                            ? `С возвращением ${user?.name ?? 'Иван'} ${user?.surname ?? 'Иваныч'} быстрей жми на кнопку чтобы продолжить играть!`\n                            : TextStrings.startPageAboutDescription,\n                        classList: style['about-game__description'],\n                    }),\n                    createComponent({\n                        tag: 'div',\n                        classList: style['actions'],\n                        children: [\n                            createComponent({\n                                tag: 'div',\n                                classList: style['actions__useful-links'],\n                                children: [\n                                    createComponent({\n                                        tag: 'span',\n                                        textContent: TextStrings.startPageAboutLInks,\n                                    }),\n                                    logoLinkComponent({\n                                        classList: style['actions__link'],\n                                        imgSrc: gitLogoImg,\n                                        altText: '@FYMG',\n                                        title: '@FYMG',\n                                        href: 'https://github.com/FYMG',\n                                    }),\n                                    logoLinkComponent({\n                                        classList: style['actions__link'],\n                                        imgSrc: rsLogoImg,\n                                        altText: 'RsSchool 2024',\n                                        title: 'RsSchool 2024',\n                                        href: 'https://rs.school/js/',\n                                    }),\n                                ],\n                            }),\n                            createComponent({\n                                tag: 'div',\n                                classList: style['actions__start-button-wrapper'],\n                                children: [\n                                    buttonComponent({\n                                        classList: style['actions__start-button'],\n                                        textContent: isAuth\n                                            ? `Продолжить`\n                                            : `Регистрация`,\n                                    }).addEventListener('click', () =>\n                                        isAuth\n                                            ? route(Routes.gamePage)\n                                            : route(Routes.loginPage, { reg: true }),\n                                    ),\n                                ],\n                            }),\n                        ],\n                    }),\n                ],\n            }),\n            bannerComponent({\n                classList: style['about-game__banner'],\n                imgSrc: bannerImg,\n            }),\n        ],\n    });\n    const content = createComponent({\n        tag: 'section',\n        classList: mergeClassLists(style['main__content'], style['about-game']),\n        children: aboutGameWrapper,\n    });\n\n    return createComponent({\n        tag: 'main',\n        classList: mergeClassLists(style['main'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    });\n};\nexport default startPageContent;\n","import createComponent from '@components/baseComponent.ts';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport TextStrings from '@utils/consts/text';\nimport style from './footer.module.scss';\n\nconst footer: typeof createComponent<HTMLDivElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const content = createComponent<HTMLElement>({\n        tag: 'div',\n        classList: style['footer__content'],\n        children: [createComponent({ tag: 'p', textContent: TextStrings.footerText })],\n    });\n\n    return createComponent({\n        tag: 'footer',\n        classList: mergeClassLists(style['footer'], classList),\n        children: mergeChildrenLists(content, children),\n        ...props,\n    });\n};\nexport default footer;\n","import header from '@viewsComponents/header/header';\nimport startPageContent from '@viewsComponents/startPageContent/startPageContent';\nimport footer from '@viewsComponents/footer/footer';\nimport createComponent from '@components/baseComponent';\n\nconst startPageView = () => {\n    return createComponent<HTMLTemplateElement>({\n        tag: 'template',\n        children: [header({}), startPageContent({}), footer({})],\n    });\n};\n\nexport default startPageView;\n","export default \"__VITE_ASSET__D3IRlFB3__\"","const regExp = /^[A-z-]*$/;\nexport default function loginPageValidator(str: string, strMinLength: number) {\n    const error: string[] = [];\n    if (!str) {\n        error.push('Поле не может быть пустым');\n    } else {\n        if (str.length < strMinLength) {\n            error.push(`мнимальная длина = ${strMinLength}`);\n        }\n        if (str[0]!.toUpperCase() !== str[0]) {\n            error.push('первая буква должна быть заглавной');\n        }\n        if (!regExp.test(str)) {\n            error.push('только латиница и \"-\"');\n        }\n    }\n    return error.join(', ');\n}\n","import createComponent from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport buttonComponent from '@components/button/buttonComponent';\nimport loginImg from '@assets/login-page-img.png';\nimport { useRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport { useAuthProvider } from '@services/auth';\nimport loginPageValidator from '@utils/helpers/loginPageValidator';\nimport style from './LoginPageContent.module.scss';\n\nconst loginPageContent: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { route, args } = useRouter();\n\n    const { login, singUp } = useAuthProvider();\n\n    const reg = args.reg ?? false;\n\n    const error = createComponent<HTMLSpanElement>({\n        tag: 'span',\n        classList: style['login-form__error'],\n    });\n\n    const nameError = createComponent({\n        tag: 'span',\n        classList: style['login-form__error'],\n    });\n\n    const name = createComponent<HTMLInputElement>({\n        tag: 'input',\n        classList: style['login-form__input'],\n        placeholder: 'Введите имя',\n        required: true,\n        type: 'text',\n    });\n\n    const surnameError = createComponent({\n        tag: 'span',\n        classList: style['login-form__error'],\n    });\n    const surname = createComponent<HTMLInputElement>({\n        tag: 'input',\n        classList: style['login-form__input'],\n        placeholder: 'Введите фамилию',\n        required: true,\n        type: 'text',\n    });\n\n    const loginButton = buttonComponent({\n        textContent: reg ? 'Зарегистрироваться' : 'Войти',\n        classList: style['login-form__button'],\n        type: 'submit',\n        disabled: true,\n    }).addEventListener('click', (evt) => {\n        evt.preventDefault();\n        const nameValue = name.getNode().value;\n        const surnameValue = surname.getNode().value;\n\n        const func = [singUp, login][reg ? 0 : 1];\n\n        func?.(nameValue, surnameValue, (reason) => {\n            error.getNode().textContent = reason.messages.join(', ');\n            if (reason.success) {\n                route(Routes.gamePage);\n            }\n        });\n    });\n\n    const loginForm = createComponent({\n        tag: 'form',\n        classList: style['login-form'],\n        children: [\n            createComponent({\n                tag: 'h2',\n                textContent: reg ? 'Регистрация' : 'Вход',\n                classList: style['login-form__title'],\n            }),\n            createComponent({\n                tag: 'label',\n                classList: style['login-form__label'],\n                children: [\n                    createComponent({\n                        tag: 'span',\n                        textContent: 'Name',\n                        classList: style['login-form__label-text'],\n                    }),\n                    name,\n                    nameError,\n                ],\n            }),\n            createComponent({\n                tag: 'label',\n                classList: style['login-form__label'],\n                children: [\n                    createComponent({\n                        tag: 'span',\n                        textContent: 'Surname',\n                        classList: style['login-form__label-text'],\n                    }),\n                    surname,\n                    surnameError,\n                ],\n            }),\n            createComponent({\n                tag: 'div',\n                classList: style['login-form__additions'],\n                children: [\n                    error,\n                    createComponent<HTMLLinkElement>({\n                        tag: 'a',\n                        classList: style['login-form__mode'],\n                        textContent: reg ? 'Вход' : 'Регистрация',\n                    }).addEventListener('click', () => {\n                        route(Routes.loginPage, {\n                            reg: !reg,\n                        });\n                    }),\n                ],\n            }),\n            loginButton,\n            createComponent<HTMLImageElement>({\n                tag: 'img',\n                classList: style['login-form__img'],\n                src: loginImg,\n                alt: 'login form img',\n            }),\n        ],\n    }).addEventListener('input', (evt) => {\n        const surnameValue = surname.getNode().value ?? '';\n        const nameValue = name.getNode().value ?? '';\n\n        if ((evt.target as HTMLElement)?.isEqualNode(name.getNode())) {\n            nameError.getNode().textContent = loginPageValidator(nameValue, 3);\n        }\n\n        if ((evt.target as HTMLElement)?.isEqualNode(surname.getNode())) {\n            surnameError.getNode().textContent = loginPageValidator(surnameValue, 4);\n        }\n\n        loginButton.getNode().disabled = !!(\n            loginPageValidator(nameValue, 3) || loginPageValidator(surnameValue, 4)\n        );\n    });\n\n    const loginWrapper = createComponent({\n        tag: 'section',\n        classList: mergeClassLists(style['main__content']),\n        children: [loginForm],\n    });\n\n    return createComponent({\n        tag: 'main',\n        classList: mergeClassLists(style['main'], classList),\n        children: mergeChildrenLists(loginWrapper, children),\n        ...props,\n    });\n};\n\nexport default loginPageContent;\n","import createComponent from '@components/baseComponent.ts';\nimport header from '@viewsComponents/header/header';\nimport footer from '@viewsComponents/footer/footer';\nimport loginPageContent from '@viewsComponents/LoginPageContent/LoginPageContent';\n\nconst loginPageView = () => {\n    return createComponent<HTMLTemplateElement>({\n        tag: 'template',\n        children: [header({}), loginPageContent({}), footer({})],\n    });\n};\n\nexport default loginPageView;\n","export default \"__VITE_ASSET__CawRnse4__\"","export default function waitImages(images: HTMLImageElement[], onComplete: () => void) {\n    let loaded = 0;\n    images.forEach((image) => {\n        image.onload = () => {\n            loaded += 1;\n            if (loaded === images.length) {\n                onComplete();\n            }\n        };\n    });\n}\n","import { BaseComponent } from '@components/baseComponent.ts';\nimport { PuzzleComponent } from '@components/puzzle/puzzleComponent';\nimport style from './puzzle.module.scss';\n\nconst applyDragEvents = (\n    component: PuzzleComponent,\n    standbyList: BaseComponent,\n    fieldRow: BaseComponent,\n    dragOnCallback?: () => void,\n): void => {\n    let startX = 0;\n    let startY = 0;\n    let dragging = false;\n\n    const dragStart = (e: MouseEvent | TouchEvent): void => {\n        if (component.disabled) {\n            return;\n        }\n        const node = component.getNode();\n        const fantomNode = node.cloneNode(true) as HTMLElement;\n        fantomNode?.classList.add(style['puzzle_fantom'] ?? '');\n        const nodeStyle = window.getComputedStyle(node);\n        let nodeUnderPointer: Element | null;\n        const translateX = parseInt(nodeStyle.getPropertyValue('--puzzle-x'), 10);\n        const translateY = parseInt(nodeStyle.getPropertyValue('--puzzle-y'), 10);\n\n        startX = 0;\n        startY = 0;\n        if (e instanceof TouchEvent) {\n            startX =\n                node.parentElement?.getBoundingClientRect().x ??\n                e.touches[0]!.pageX - translateX;\n            startY =\n                node.parentElement?.getBoundingClientRect().y ??\n                e.touches[0]!.pageY - translateY;\n        }\n        if (e instanceof MouseEvent) {\n            startX =\n                node.parentElement?.getBoundingClientRect().x ?? e.pageX - translateX;\n            startY =\n                node.parentElement?.getBoundingClientRect().y ?? e.pageY - translateY;\n        }\n\n        let lastX = startX;\n        let lastY = startY;\n\n        const dragMove = (eMove: MouseEvent | TouchEvent) => {\n            let pageX = 0;\n            let clientX = 0;\n            let pageY = 0;\n            let clientY = 0;\n            if (eMove instanceof TouchEvent) {\n                pageX = eMove.touches[0]!.pageX;\n                clientX = eMove.touches[0]!.clientX;\n                pageY = eMove.touches[0]!.pageY;\n                clientY = eMove.touches[0]!.clientY;\n            }\n            if (eMove instanceof MouseEvent) {\n                pageX = eMove.pageX;\n                clientX = eMove.clientX;\n                pageY = eMove.pageY;\n                clientY = eMove.clientY;\n            }\n            if (Math.abs(pageY - startY) < 10 && Math.abs(pageX - startX) < 10) {\n                return;\n            }\n            dragging = true;\n\n            nodeUnderPointer = document.elementFromPoint(clientX, clientY);\n            node.style.setProperty('position', `absolute`);\n            node.style.setProperty('--puzzle-x', `${pageX - startX}px`);\n            node.style.setProperty('--puzzle-y', `${pageY - startY}px`);\n            node.style.setProperty('pointer-events', `none`);\n            node.style.setProperty('z-index', `2`);\n\n            if (\n                (Math.abs(lastX - pageX) < 10 && Math.abs(lastY - pageY) < 10) ||\n                nodeUnderPointer?.isEqualNode(fantomNode)\n            ) {\n                return;\n            }\n            lastX = pageX;\n            lastY = pageY;\n            if (\n                nodeUnderPointer &&\n                (standbyList.isNode(nodeUnderPointer) ||\n                    fieldRow.isNode(nodeUnderPointer))\n            ) {\n                nodeUnderPointer.append(fantomNode);\n            } else if (\n                nodeUnderPointer &&\n                !nodeUnderPointer.isEqualNode(node) &&\n                nodeUnderPointer.classList.contains(style['puzzle'] ?? '') &&\n                (standbyList.haveChildrenNode(nodeUnderPointer) ||\n                    fieldRow.haveChildrenNode(nodeUnderPointer))\n            ) {\n                const isLeftSide =\n                    Math.abs(nodeUnderPointer.getBoundingClientRect().left - pageX) <=\n                    nodeUnderPointer.clientWidth / 2;\n                if (isLeftSide) {\n                    nodeUnderPointer.before(fantomNode);\n                } else {\n                    nodeUnderPointer.after(fantomNode);\n                }\n            } else {\n                fantomNode.remove();\n            }\n        };\n\n        const dragEnd = () => {\n            document.body.removeEventListener('mousemove', dragMove);\n            document.body.removeEventListener('mouseup', dragEnd);\n            document.body.removeEventListener('touchmove', dragMove);\n            document.body.removeEventListener('touchend', dragEnd);\n            if (dragging) {\n                if (standbyList.haveChildrenNode(fantomNode)) {\n                    standbyList.append(component);\n                }\n                if (fieldRow.haveChildrenNode(fantomNode)) {\n                    fieldRow.append(component);\n                }\n                fantomNode.replaceWith(node);\n                fantomNode.remove();\n                node.style.setProperty('--puzzle-x', `${0}px`);\n                node.style.setProperty('--puzzle-y', `${0}px`);\n                node.style.setProperty('z-index', `0`);\n                node.style.setProperty('pointer-events', `auto`);\n                node.style.setProperty('position', `relative`);\n                dragOnCallback?.();\n            }\n            dragging = false;\n        };\n\n        document.body.addEventListener('touchmove', dragMove);\n        document.body.addEventListener('touchend', dragEnd);\n        document.body.addEventListener('mousemove', dragMove);\n        document.body.addEventListener('mouseup', dragEnd);\n    };\n\n    component.addEventListener('touchstart', dragStart);\n    component.addEventListener('mousedown', dragStart);\n};\n\nexport default applyDragEvents;\n","import createComponent, {\n    BaseComponent,\n    FunctionComponent,\n    IProps,\n} from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\n\nimport applyDragEvents from '@components/puzzle/puzzelComponentEvents';\nimport style from './puzzle.module.scss';\n\nexport class PuzzleComponent extends BaseComponent {\n    public word: string;\n\n    private readonly baseSrc: string;\n\n    private readonly additionalSrc: string;\n\n    public disabled: boolean;\n\n    public imageComponent: BaseComponent<HTMLImageElement>;\n\n    constructor(\n        word: string,\n        baseSrc: string,\n        additionalSrc: string,\n        imageComponent: BaseComponent<HTMLImageElement>,\n        props: IProps,\n        disabled = false,\n    ) {\n        super(props);\n        this.word = word;\n        this.baseSrc = baseSrc;\n        this.additionalSrc = additionalSrc;\n        this.imageComponent = imageComponent;\n        this.disabled = disabled;\n    }\n\n    public validate(word: string) {\n        this.removeValidation();\n        if (this.word === word) {\n            this.node.classList.add(style['puzzle_valid-good'] ?? '');\n        } else {\n            this.node.classList.add(style['puzzle_valid-bad'] ?? '');\n        }\n\n        return this.word === word;\n    }\n\n    public removeValidation() {\n        this.node.classList.remove(style['puzzle_valid-bad'] ?? '');\n        this.node.classList.remove(style['puzzle_valid-good'] ?? '');\n    }\n\n    public useBaseSrc() {\n        this.imageComponent.getNode().src = this.baseSrc;\n    }\n\n    public useAdditionalSrc() {\n        this.imageComponent.getNode().src = this.additionalSrc;\n    }\n}\n\nexport interface IPuzzleComponentProps {\n    baseDataImg: string;\n    additionalDataImg: string;\n    word: string;\n    fieldRow: BaseComponent;\n    standbyList: BaseComponent;\n    onUpdate?: () => void;\n}\n\nconst puzzleComponent: FunctionComponent<\n    HTMLElement,\n    IPuzzleComponentProps,\n    PuzzleComponent\n> = ({\n    baseDataImg,\n    additionalDataImg,\n    onUpdate,\n    word,\n    fieldRow,\n    standbyList,\n    classList,\n    children,\n    ...props\n}) => {\n    const puzzleText = createComponent<HTMLElement>({\n        tag: 'span',\n        classList: style['puzzle__text'],\n        textContent: word,\n    });\n\n    const puzzleTextWrapper = createComponent<HTMLElement>({\n        tag: 'div',\n        classList: style['puzzle__text-wrapper'],\n        children: [puzzleText],\n    });\n\n    const puzzleImg = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: mergeClassLists(style['puzzle__img'], classList),\n        children,\n        src: baseDataImg,\n    });\n    const puzzle = new PuzzleComponent(word, baseDataImg, additionalDataImg, puzzleImg, {\n        tag: 'div',\n        classList: style['puzzle'],\n        children: mergeChildrenLists(puzzleImg, puzzleTextWrapper, children),\n        draggable: false,\n        ...props,\n    }).addEventListener('click', () => {\n        if (puzzle.disabled) {\n            return;\n        }\n        if (fieldRow.haveChildren(puzzle)) {\n            standbyList.append(puzzle);\n        } else {\n            fieldRow.append(puzzle);\n        }\n        onUpdate?.();\n    });\n    applyDragEvents(puzzle, standbyList, fieldRow, onUpdate);\n\n    return puzzle;\n};\nexport default puzzleComponent;\n","import throwError from '@utils/helpers/throwError';\n\nexport function beforeItemWidth(\n    index: number,\n    totalWidth: number,\n    strList: string[],\n): number | never {\n    if (strList.length > index) {\n        return Math.floor(\n            totalWidth -\n                (strList.slice(index).join('').length / strList.join('').length) *\n                    totalWidth,\n        );\n    }\n    return throwError('Incorrect index');\n}\n\nexport function itemWidth(\n    index: number,\n    totalWidth: number,\n    strList: string[],\n): number | never {\n    if (strList.length > index) {\n        return Math.floor(\n            (strList[index]!.length / strList.join('').length) * totalWidth,\n        );\n    }\n    return throwError('Incorrect index');\n}\n","import { beforeItemWidth, itemWidth } from '@utils/helpers/widthByStrLenght';\n\nexport default function drawPuzzle(\n    col: number,\n    row: number,\n    totalRows: number,\n    textExample: string,\n    puzzleImg: HTMLImageElement,\n    extraWidth = 8,\n) {\n    const imgNode = puzzleImg;\n    const imgRect = imgNode.getBoundingClientRect();\n    const textExampleArr = textExample.split(' ');\n\n    const tempCanvas = document.createElement('canvas');\n    const tempCtx = tempCanvas.getContext('2d');\n    const extraWidthCopy = col !== textExampleArr.length - 1 ? extraWidth : 0;\n\n    tempCanvas.width = itemWidth(col, imgRect.width, textExampleArr) + extraWidthCopy;\n\n    tempCanvas.height = imgRect.height / totalRows;\n\n    if (tempCtx) {\n        const h = tempCanvas.height;\n        tempCtx.save();\n        tempCtx.fillStyle = 'black';\n\n        tempCtx.drawImage(\n            imgNode,\n            beforeItemWidth(col, imgNode.naturalWidth, textExampleArr),\n            (imgNode.naturalHeight / totalRows) * row,\n            itemWidth(col, imgNode.naturalWidth, textExampleArr),\n            imgNode.naturalHeight / totalRows,\n            0,\n            0,\n            itemWidth(col, imgRect.width, textExampleArr),\n            tempCanvas.height,\n        );\n        if (col !== 0) {\n            tempCtx.globalCompositeOperation = 'destination-out';\n            tempCtx.arc(0, h / 2, extraWidth - 1, 0, Math.PI * 2, true);\n            tempCtx.fill();\n            tempCtx.globalCompositeOperation = 'source-over';\n        }\n\n        if (col < textExampleArr.length) {\n            tempCtx.beginPath();\n            tempCtx.arc(\n                itemWidth(col, imgRect.width, textExampleArr),\n                h / 2,\n                extraWidth - 1,\n                0,\n                2 * Math.PI,\n            );\n\n            tempCtx.clip();\n            tempCtx.drawImage(\n                imgNode,\n                beforeItemWidth(col, imgNode.naturalWidth, textExampleArr) +\n                    itemWidth(col, imgNode.naturalWidth, textExampleArr),\n                (imgNode.naturalHeight / totalRows) * row,\n                itemWidth(col, imgNode.naturalWidth, textExampleArr) + 8,\n                imgNode.naturalHeight / totalRows,\n                itemWidth(col, imgRect.width, textExampleArr),\n                0,\n                itemWidth(col, imgRect.width, textExampleArr) + extraWidthCopy,\n                tempCanvas.height,\n            );\n            tempCtx.closePath();\n            tempCtx.restore();\n        }\n    }\n\n    return { canvas: tempCanvas, extra: extraWidth };\n}\n","import createComponent, { BaseComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from '@components/board/board.module.scss';\nimport puzzleComponent, { PuzzleComponent } from '@components/puzzle/puzzleComponent';\nimport drawPuzzle from '@utils/helpers/drawPuzzle';\nimport { IRound } from '@models/ILevelModel.ts';\n\nconst fillBoard = (\n    round: IRound,\n    puzzleImg: BaseComponent<HTMLImageElement>,\n    cartonTexture: BaseComponent<HTMLImageElement>,\n    standbyList: BaseComponent,\n    onUpdate: () => void,\n) => {\n    const rows = round.words.length;\n    const rowList: BaseComponent[] = [];\n    const puzzleGrid: PuzzleComponent[][] = [];\n\n    round.words.forEach((word, row) => {\n        const rowElem = createComponent<HTMLElement>({\n            tag: 'div',\n            classList: mergeClassLists(style['board__row'], style['board__row_current']),\n        });\n        rowList.push(rowElem);\n        const puzzleList: PuzzleComponent[] = [];\n        word.textExample.split(' ').forEach((item, col, array) => {\n            const { canvas, extra } = drawPuzzle(\n                col,\n                row,\n                rows,\n                word.textExample,\n                puzzleImg.getNode(),\n            );\n\n            const cartonCanvas = drawPuzzle(\n                col,\n                row,\n                rows,\n                word.textExample,\n                cartonTexture.getNode(),\n            );\n            const puzzle = puzzleComponent({\n                baseDataImg: cartonCanvas.canvas.toDataURL('image/png'),\n                additionalDataImg: canvas.toDataURL('image/png'),\n                word: item,\n                fieldRow: rowElem,\n                standbyList,\n                style: {\n                    width: `${canvas.width - (array.length - 1 !== col ? extra : 0) + 0.5}px`,\n                    height: `${canvas.height}px`,\n                },\n                onUpdate,\n            });\n\n            rowElem.getNode().style.height = `${canvas.height}px`;\n            puzzleList.push(puzzle);\n        });\n        puzzleGrid.push([...puzzleList]);\n\n        rowElem.appendChildren(puzzleList);\n    });\n    return { rowList, puzzleGrid };\n};\n\nexport default fillBoard;\n","const arrayShuffle = <T>(array: T[]): T[] => {\n    const arrayCopy = array.slice();\n    array.forEach((_, i) => {\n        const j = Math.floor(Math.random() * (i + 1));\n        [arrayCopy[i], arrayCopy[j]] = [arrayCopy[j]!, arrayCopy[i]!];\n    });\n    return arrayCopy;\n};\n\nexport default arrayShuffle;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport MergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './loader.module.scss';\n\nconst loaderComponent: FunctionComponent = ({ classList, ...props }) => {\n    return createComponent<HTMLElement>({\n        tag: 'div',\n        classList: MergeClassLists(style['loader'], classList),\n        ...props,\n    });\n};\n\nexport default loaderComponent;\n","import createComponent, {\n    BaseComponent,\n    FunctionComponent,\n} from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport { PuzzleComponent } from '@components/puzzle/puzzleComponent';\n\nimport ILevelModel, { IRound } from '@models/ILevelModel';\nimport throwError from '@utils/helpers/throwError';\n\nimport texture from '@assets/puzzle-texture.jpg';\nimport waitImages from '@utils/helpers/waitImages';\nimport fillBoard from '@components/board/fillBoard';\nimport arrayShuffle from '@utils/helpers/arrayShuffle';\nimport loaderComponent from '@components/loader/loaderComponent';\nimport { BoardControlComponent } from '@components/boardControl/boardControlComponent';\nimport { useAuthProvider } from '@services/auth.ts';\nimport style from './board.module.scss';\n\ninterface OnUpdateProps {\n    isWin: boolean;\n    rowIsCorrect: boolean;\n    rowIsComplete: boolean;\n    round: IRound;\n    rowLength: number;\n    goToNextRow: () => void;\n    validate: () => void;\n    iDontKnow: () => void;\n}\n\nexport interface IBoardComponentProps {\n    difficulty: number;\n    level: number;\n    data: ILevelModel;\n    standbyList: BaseComponent;\n    controlComponent: BoardControlComponent;\n    onUpdate?: (props: OnUpdateProps) => void;\n    loader?: BaseComponent;\n}\n\nclass BoardComponent extends BaseComponent {\n    public iDontKnow: () => void = () => {};\n\n    public isWin = false;\n\n    public rowIsCorrect = false;\n\n    public rowIsComplete = false;\n\n    public validate: () => void = () => {};\n\n    public goToNextRow: () => void = () => {};\n}\n\nconst boardComponent: FunctionComponent<\n    HTMLElement,\n    IBoardComponentProps,\n    BoardComponent\n> = ({\n    difficulty,\n    controlComponent,\n    imgSrc,\n    level,\n    data,\n    classList,\n    children,\n    standbyList,\n    onUpdate,\n    ...props\n}) => {\n    if (!data.rounds[level]) {\n        throwError('level not found');\n    }\n    const { saveData } = useAuthProvider();\n    const loader = loaderComponent({\n        classList: style['board__loader'],\n    });\n    const round = data.rounds[level]!;\n    let rowElements: BaseComponent[] = [];\n    let puzzleGrid: PuzzleComponent[][] = [];\n    let currentRow = 0;\n\n    const puzzleImg = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: style['board__img'],\n        src: round.levelData.imageSrc,\n        crossOrigin: 'anonymous',\n    });\n\n    const boardText = createComponent<HTMLParagraphElement>({\n        tag: 'p',\n        classList: style['board__text'],\n        textContent: `${round.levelData.name}, ${round.levelData.author}, ${round.levelData.year}`,\n    });\n\n    const cartonTexture = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: mergeClassLists(style['board__img']),\n        src: texture,\n        crossOrigin: 'anonymous',\n    });\n\n    const puzzleWrapper = createComponent<HTMLElement>({\n        tag: 'div',\n        classList: style['board__puzzle-wrapper'],\n    });\n\n    const board = new BoardComponent({\n        tag: 'div',\n        classList: mergeClassLists(style['board'], style['board_loading'], classList),\n        children: mergeChildrenLists(\n            loader,\n            puzzleImg,\n            boardText,\n            cartonTexture,\n            puzzleWrapper,\n            children,\n        ),\n        draggable: false,\n        ...props,\n    });\n\n    const usePuzzleSrc = (): void => {\n        const showPuzzle: boolean = saveData?.showPuzzle ?? false;\n        if (showPuzzle) {\n            (puzzleGrid?.[currentRow] ?? []).forEach((item) => item.useAdditionalSrc());\n        } else {\n            (puzzleGrid?.[currentRow] ?? []).forEach((item) => item.useBaseSrc());\n        }\n    };\n    controlComponent.setShowPuzzleHandler(usePuzzleSrc);\n\n    const nextRow = (currRow: number) => {\n        controlComponent.setTranslation(round.words[currRow]?.textExampleTranslate ?? '');\n        controlComponent.setAudioSrc(round.words[currRow]?.audioExample ?? '');\n        rowElements[currentRow]?.addClass(style['board__row_current'] ?? '');\n        rowElements.forEach((row) => {\n            row.getNode().classList.remove(style['board__row_hidden'] ?? '');\n        });\n        puzzleGrid?.slice(0, currRow).forEach((row) =>\n            row.forEach((item) => {\n                item.disabled = true;\n                item.useAdditionalSrc();\n            }),\n        );\n        rowElements.slice(currRow + 1, rowElements.length).forEach((row) => {\n            if (style['board__row_hidden']) {\n                row.getNode().classList.add(style['board__row_hidden']);\n            }\n        });\n        standbyList.appendChildren(arrayShuffle(puzzleGrid?.[currRow] ?? []));\n        usePuzzleSrc();\n    };\n\n    const goToNextRow = () => {\n        puzzleGrid[currentRow]?.forEach((item) => item.removeValidation());\n        board.isWin = currentRow === rowElements.length - 1;\n        if (board.isWin) {\n            saveData!.levels![difficulty]![Number(level)]!.completed = true;\n            controlComponent.makeVisible();\n            boardText.getNode().style.display = 'block';\n            puzzleWrapper.destroy();\n            puzzleImg.getNode().style.opacity = '1';\n            console.log('U WIN!!!!!!!11!!');\n            return;\n        }\n        controlComponent.makeHidden();\n        currentRow += 1;\n        nextRow(currentRow);\n    };\n\n    const onUpdateHandler = () => {\n        const currentItems = Array.from(\n            rowElements[currentRow]?.getNode().children ?? [],\n        );\n        const currenRightAnswer = round.words[currentRow]?.textExample ?? '';\n        puzzleGrid[currentRow]?.forEach((item) => item.removeValidation());\n\n        const currentText = currentItems.map((item) => item.textContent);\n        const validate = () => {\n            puzzleGrid[currentRow]?.forEach((item, i) => {\n                item.validate(currentText[i] ?? '');\n            });\n        };\n\n        const rowIsCorrect = currentText.join(' ') === currenRightAnswer;\n        const rowIsComplete = currentText.length === currenRightAnswer.split(' ').length;\n\n        controlComponent.makeHidden();\n        if (rowIsCorrect) {\n            controlComponent.makeVisible();\n        }\n\n        board.rowIsComplete = rowIsComplete;\n        board.rowIsCorrect = rowIsCorrect;\n        board.validate = validate;\n        board.goToNextRow = goToNextRow;\n\n        const rowLength = currentText.length;\n        onUpdate?.({\n            iDontKnow: board.iDontKnow.bind(board),\n            isWin: board.isWin,\n            rowIsCorrect,\n            rowIsComplete,\n            round,\n            rowLength,\n            goToNextRow,\n            validate,\n        });\n    };\n\n    board.iDontKnow = function () {\n        rowElements[currentRow]?.appendChildren(puzzleGrid[currentRow] ?? []);\n        saveData!.levels![difficulty]![Number(level)]!.words[currentRow]!.hint = true;\n        goToNextRow();\n        onUpdateHandler();\n    };\n\n    board.componentDidMount(() => {\n        waitImages([cartonTexture.getNode(), puzzleImg.getNode()], () => {\n            const { rowList: list, puzzleGrid: grid } = fillBoard(\n                round,\n                puzzleImg,\n                cartonTexture,\n                standbyList,\n                onUpdateHandler,\n            );\n            puzzleGrid = grid;\n            rowElements = list;\n            puzzleWrapper.appendChildren(rowElements);\n            loader?.destroy();\n            cartonTexture.destroy();\n            nextRow(currentRow);\n            board.removeClass(style['board_loading'] ?? '');\n        });\n    });\n    return board;\n};\n\nexport default boardComponent;\n","import ILevelModel from '@models/ILevelModel';\nimport throwError from '@utils/helpers/throwError';\n\nconst baseUrl = new URL(\n    'https://raw.githubusercontent.com/rolling-scopes-school/rss-puzzle-data/ee4dc7be8759183c549b49bc895e6004fc0f05a2/',\n);\n\nexport const LevelDifficulty: Record<number, string> = {\n    0: 'data/wordCollectionLevel1.json',\n    1: 'data/wordCollectionLevel2.json',\n    2: 'data/wordCollectionLevel3.json',\n    3: 'data/wordCollectionLevel4.json',\n    4: 'data/wordCollectionLevel5.json',\n    5: 'data/wordCollectionLevel6.json',\n};\n\nconst getLevels = async (\n    difficulty: keyof typeof LevelDifficulty,\n): Promise<ILevelModel> => {\n    const difficultyPath = LevelDifficulty[difficulty];\n    if (difficultyPath) {\n        const url = new URL(difficultyPath, baseUrl);\n        return fetch(url)\n            .then((response) => {\n                return response.json();\n            })\n            .then((data: ILevelModel) => {\n                data.rounds.forEach(({ levelData, words }) => {\n                    levelData.imageSrc = new URL(\n                        `images/${levelData.imageSrc}`,\n                        baseUrl,\n                    ).toString();\n                    levelData.cutSrc = new URL(\n                        `images/${levelData.cutSrc}`,\n                        baseUrl,\n                    ).toString();\n                    words.forEach((word) => {\n                        word.audioExample = new URL(\n                            word.audioExample,\n                            baseUrl,\n                        ).toString();\n                    });\n                });\n                return data;\n            })\n            .catch((e: Error): never => {\n                throw e;\n            });\n    }\n    return throwError('No such difficulty');\n};\n\nexport default getLevels;\n","import { BaseComponent, FunctionComponent, IProps } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport style from './playVoiceButton.module.scss';\n\ninterface IPlayVoiceButtonComponentProps {\n    soundSrc?: string;\n}\n\nexport class PlayVoiceButtonComponent extends BaseComponent<HTMLButtonElement> {\n    private static currentPlaying: HTMLAudioElement | null = null;\n\n    public soundSrc: string;\n\n    constructor(soundSrc: string, props: IProps) {\n        super(props);\n        this.soundSrc = soundSrc ?? '';\n        this.addEventListener('click', () => {\n            this.addClass(style['play-voice-button_playing'] ?? '');\n            const audioComponent = new Audio(this.soundSrc);\n            if (PlayVoiceButtonComponent.currentPlaying) {\n                PlayVoiceButtonComponent.currentPlaying.pause();\n                PlayVoiceButtonComponent.currentPlaying = null;\n            }\n            PlayVoiceButtonComponent.currentPlaying = audioComponent;\n            audioComponent.onpause = () => {\n                this.removeClass(style['play-voice-button_playing'] ?? '');\n            };\n            audioComponent.play().catch(console.error);\n        });\n    }\n}\n\nconst playVoiceButtonComponent: FunctionComponent<\n    HTMLButtonElement,\n    IPlayVoiceButtonComponentProps,\n    PlayVoiceButtonComponent\n> = ({ classList, soundSrc, children, ...props }) => {\n    return new PlayVoiceButtonComponent(soundSrc ?? '', {\n        tag: 'button',\n        classList: mergeClassLists(style['play-voice-button'], classList),\n        textContent: '🔊',\n        ...props,\n    });\n};\n\nexport default playVoiceButtonComponent;\n","import createComponent, {\n    BaseComponent,\n    FunctionComponent,\n    IProps,\n} from '@components/baseComponent';\nimport MergeClassLists from '@utils/helpers/mergeClassLists';\n\nimport { useAuthProvider } from '@services/auth.ts';\nimport playVoiceButtonComponent, {\n    PlayVoiceButtonComponent,\n} from '@components/playVoiceButton/playVoiceButtonComponent';\nimport style from './boardControl.module.scss';\n\nexport class BoardControlComponent extends BaseComponent {\n    private translation;\n\n    private text = '';\n\n    private audio: PlayVoiceButtonComponent;\n\n    private showPuzzleComponent: BaseComponent;\n\n    constructor(\n        playAudioComponent: PlayVoiceButtonComponent,\n        translationComponent: BaseComponent,\n        showPuzzleComponent: BaseComponent,\n        props: IProps,\n    ) {\n        super(props);\n        this.showPuzzleComponent = showPuzzleComponent;\n        this.audio = playAudioComponent;\n        this.translation = translationComponent;\n    }\n\n    setAudioSrc(audioSrc: string) {\n        this.audio.soundSrc = audioSrc;\n    }\n\n    makeVisible() {\n        this.audio\n            .getNode()\n            .classList.remove(style['board-control__audio-translate_hidden'] ?? '');\n        this.translation\n            .getNode()\n            .classList.remove(style['board-control__translation_hidden'] ?? '');\n    }\n\n    makeHidden() {\n        const { saveData } = useAuthProvider();\n        const showAudioTranslate = saveData?.audioOn ?? true;\n        const showTextTranslate = saveData?.translateTextOn ?? true;\n\n        if (!showAudioTranslate) {\n            this.audio\n                .getNode()\n                .classList.add(style['board-control__audio-translate_hidden'] ?? '');\n        }\n        if (!showTextTranslate) {\n            this.translation\n                .getNode()\n                .classList.add(style['board-control__translation_hidden'] ?? '');\n        }\n    }\n\n    setTranslation(translation: string) {\n        this.text = translation;\n        this.translation.getNode().textContent = this.text;\n    }\n\n    setShowPuzzleHandler(callback: () => void) {\n        const clickHandler = () => {\n            const { saveData } = useAuthProvider();\n            if (saveData) {\n                saveData.showPuzzle = !(saveData?.showPuzzle ?? false);\n                callback();\n            }\n        };\n        this.showPuzzleComponent.addEventListener('click', clickHandler);\n    }\n}\n\nconst boardControlComponent: FunctionComponent<\n    HTMLElement,\n    IProps,\n    BoardControlComponent\n> = ({ classList, ...props }) => {\n    const { saveData } = useAuthProvider();\n    let showAudioTranslate = saveData?.audioOn ?? true;\n    let showTextTranslate = saveData?.translateTextOn ?? true;\n\n    const translation = createComponent<HTMLSpanElement>({\n        tag: 'span',\n        classList: style['board-control__translation'],\n    }).componentDidMount(() => {\n        if (!showTextTranslate) {\n            translation.addClass(style['board-control__translation_hidden'] ?? '');\n        }\n    });\n\n    const audioTranslate = playVoiceButtonComponent({\n        classList: style['board-control__audio-translate'],\n    }).componentDidMount(() => {\n        if (!showAudioTranslate) {\n            audioTranslate.addClass(style['board-control__audio-translate_hidden'] ?? '');\n        }\n    });\n\n    const audioHide = createComponent({\n        tag: 'button',\n        classList: MergeClassLists(\n            style['board-control__button'],\n            style['board-control__audio-hide'],\n        ),\n        textContent: '🔊',\n    })\n        .addEventListener('click', () => {\n            showAudioTranslate = !showAudioTranslate;\n            saveData!.audioOn = showAudioTranslate;\n\n            if (!showAudioTranslate) {\n                audioTranslate.addClass(\n                    style['board-control__audio-translate_hidden'] ?? '',\n                );\n                audioHide.removeClass(style['board-control__button_active'] ?? '');\n            } else {\n                audioTranslate.removeClass(\n                    style['board-control__audio-translate_hidden'] ?? '',\n                );\n                audioHide.addClass(style['board-control__button_active'] ?? '');\n            }\n        })\n        .componentDidMount(() => {\n            if (showAudioTranslate) {\n                audioHide.addClass(style['board-control__button_active'] ?? '');\n            }\n        });\n\n    const translationBlock = createComponent({\n        tag: 'div',\n        classList: style['board-control__translation-block'],\n    });\n\n    const translationHide = createComponent({\n        tag: 'button',\n        classList: MergeClassLists(\n            style['board-control__button'],\n            style['board-control__translation-hide'],\n        ),\n        textContent: '🖹',\n    })\n        .addEventListener('click', () => {\n            showTextTranslate = !showTextTranslate;\n            saveData!.translateTextOn = showTextTranslate;\n\n            if (showTextTranslate) {\n                translation.removeClass(style['board-control__translation_hidden'] ?? '');\n                translationHide.addClass(style['board-control__button_active'] ?? '');\n            } else {\n                translation.addClass(style['board-control__translation_hidden'] ?? '');\n                translationHide.removeClass(style['board-control__button_active'] ?? '');\n            }\n        })\n        .componentDidMount(() => {\n            if (showTextTranslate) {\n                translationHide.addClass(style['board-control__button_active'] ?? '');\n            }\n        });\n\n    const showPuzzle = createComponent<HTMLButtonElement>({\n        tag: 'button',\n        textContent: '🖼️',\n        classList: MergeClassLists(style['board-control__button']),\n    });\n    const hideControlBlock = createComponent({\n        tag: 'div',\n        classList: style['board-control__hide-block'],\n        children: [audioHide, translationHide, showPuzzle],\n    });\n\n    translationBlock.appendChildren([translation, audioTranslate]);\n\n    return new BoardControlComponent(audioTranslate, translation, showPuzzle, {\n        children: [translationBlock, hideControlBlock],\n        classList: MergeClassLists(style['board-control'], classList),\n        ...props,\n    });\n};\n\nexport default boardControlComponent;\n","import createComponent, { FunctionComponent } from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport ILevelModel from '@models/ILevelModel.ts';\nimport { useAuthProvider } from '@services/auth.ts';\nimport playVoiceButtonComponent from '@components/playVoiceButton/playVoiceButtonComponent';\nimport Routes from '@utils/consts/routes';\nimport { useRouter } from '@services/router';\nimport style from './statisticModal.module.scss';\n\ninterface IStatisticModalProps {\n    level: number;\n    difficulty: number;\n    data: ILevelModel;\n}\nconst statisticModalComponent: FunctionComponent<HTMLElement, IStatisticModalProps> = ({\n    level,\n    difficulty,\n    data,\n    classList,\n    children,\n    ...props\n}) => {\n    const round = data.rounds[level]!;\n    const { saveData } = useAuthProvider();\n    const { route } = useRouter();\n\n    const levelsWithOutHits = createComponent({\n        tag: 'div',\n        classList: style['statistic-modal__levels'],\n    });\n    const levelsWithHits = createComponent({\n        tag: 'div',\n        classList: mergeClassLists(\n            style['statistic-modal__levels'],\n            style['statistic-modal__levels_hint'],\n        ),\n    });\n\n    const continueButton = createComponent({\n        tag: 'button',\n        classList: style['statistic-modal__button'],\n        textContent: 'Продолжить',\n    }).addEventListener('click', () => {\n        if (level === data.roundsCount - 1 && difficulty === 5) {\n            route(Routes.gamePage, { level: 0, difficulty: 0 });\n            return;\n        }\n        if (level === data.roundsCount - 1) {\n            route(Routes.gamePage, { level: 0, difficulty: difficulty + 1 });\n            return;\n        }\n        route(Routes.gamePage, { level: level + 1, difficulty });\n    });\n    const withHintsTitle = createComponent({\n        tag: 'h4',\n        classList: mergeClassLists(\n            style['statistic-modal__title'],\n            style['statistic-modal__title_hidden'],\n        ),\n        textContent: 'Ряды собранные c подсказкой:',\n    });\n    const withOutHintsTitle = createComponent({\n        tag: 'h4',\n        classList: mergeClassLists(\n            style['statistic-modal__title'],\n            style['statistic-modal__title_hidden'],\n        ),\n        textContent: 'Ряды собранные без подсказки:',\n    });\n    const levelsWrapper = createComponent({\n        tag: 'div',\n        classList: style['statistic-modal__levels-wrapper'],\n        children: [withOutHintsTitle, levelsWithOutHits, withHintsTitle, levelsWithHits],\n    });\n\n    const miniImage = createComponent<HTMLImageElement>({\n        tag: 'img',\n        classList: style['statistic-modal__image'],\n        src: round.levelData.cutSrc,\n    });\n\n    round.words.forEach((word, index) => {\n        const hintUsed = saveData?.levels![difficulty]![level]!.words[index]!.hint;\n        const levelComponent = createComponent({\n            tag: 'div',\n            classList: style['statistic-modal__level'],\n            children: [\n                playVoiceButtonComponent({\n                    soundSrc: word.audioExample,\n                }),\n                createComponent({\n                    tag: 'span',\n                    classList: style['statistic-modal__level'],\n                    textContent: word.textExample,\n                }),\n            ],\n        });\n        if (hintUsed) {\n            withHintsTitle.removeClass(style['statistic-modal__title_hidden'] ?? '');\n            levelsWithHits.appendChildren(levelComponent);\n        } else {\n            withOutHintsTitle.removeClass(style['statistic-modal__title_hidden'] ?? '');\n            levelsWithOutHits.appendChildren(levelComponent);\n        }\n    });\n\n    const statisticModalContent = createComponent({\n        tag: 'div',\n        classList: style['statistic-modal__content'],\n        children: [\n            miniImage,\n            createComponent({\n                tag: 'h4',\n                classList: style['statistic-modal__title'],\n                textContent: `${round.levelData.name}, ${round.levelData.author}, ${round.levelData.year}`,\n            }),\n            levelsWrapper,\n            continueButton,\n        ],\n    });\n\n    const modal = createComponent({\n        tag: 'div',\n        classList: mergeClassLists(style['statistic-modal'], classList),\n        children: [statisticModalContent],\n        ...props,\n    });\n\n    const closeButton = createComponent({\n        tag: 'button',\n        classList: style['statistic-modal__close'],\n        textContent: 'X',\n    }).addEventListener('click', () => {\n        modal.destroy();\n    });\n\n    statisticModalContent.append(closeButton);\n\n    return modal;\n};\n\nexport default statisticModalComponent;\n","import createComponent from '@components/baseComponent';\nimport mergeClassLists from '@utils/helpers/mergeClassLists';\nimport mergeChildrenLists from '@utils/helpers/mergeChildrenLists';\nimport { useRouter } from '@services/router';\nimport boardComponent from '@components/board/boardComponent';\nimport getLevels, { LevelDifficulty } from '@services/api';\nimport throwError from '@utils/helpers/throwError';\nimport Routes from '@utils/consts/routes';\nimport boardControlComponent from '@components/boardControl/boardControlComponent';\nimport { useAuthProvider } from '@services/auth';\nimport statisticModalComponent from '@components/statisticModal/statisticModalComponent';\nimport style from './gamePageContent.module.scss';\n\nconst gamePageContent: typeof createComponent<HTMLElement> = ({\n    classList,\n    children,\n    ...props\n}) => {\n    const { route, args, root } = useRouter();\n    const { saveData } = useAuthProvider();\n    const difficulty = args.difficulty ?? saveData?.difficulty ?? 0;\n    let level = args.level ?? saveData?.level ?? 0;\n    if (saveData) {\n        saveData.level = level;\n        saveData.difficulty = difficulty;\n    }\n\n    const boardControl = boardControlComponent({\n        classList: style['game-field__control'],\n    });\n\n    const standbyList = createComponent({\n        tag: 'div',\n        classList: style['standby-list'],\n    });\n\n    const gameFieldWrapper = createComponent({\n        tag: 'section',\n        classList: mergeClassLists(style['main__content']),\n    });\n\n    const statisticButton = createComponent({\n        tag: 'button',\n        classList: mergeClassLists(\n            style['game-field__button'],\n            style['game-field__button_hidden'],\n        ),\n        textContent: 'Результаты',\n    });\n\n    const checkRowButton = createComponent<HTMLButtonElement>({\n        tag: 'button',\n        classList: mergeClassLists(\n            style['game-field__button'],\n            style['game-field__button_hidden'],\n        ),\n        textContent: 'check row',\n    });\n\n    const levelSelect = createComponent({\n        tag: 'select',\n        classList: style['game-field__select'],\n        id: 'level',\n    });\n\n    const levelSelectLabel = createComponent({\n        tag: 'label',\n        textContent: 'Уровень:',\n        children: levelSelect,\n    });\n\n    const difficultySelect = createComponent({\n        tag: 'select',\n        classList: style['game-field__select'],\n        id: 'difficulty',\n    });\n\n    const difficultySelectLabel = createComponent({\n        tag: 'label',\n        textContent: 'Сложность:',\n        children: difficultySelect,\n    });\n\n    const iDontKnowButton = createComponent<HTMLButtonElement>({\n        tag: 'button',\n        classList: style['game-field__button'],\n        textContent: 'Подсказка',\n    });\n\n    const controlsBlock = createComponent({\n        tag: 'div',\n        classList: mergeClassLists(style['game-field__controls-block']),\n        children: [\n            difficultySelectLabel,\n            levelSelectLabel,\n            checkRowButton,\n            statisticButton,\n            iDontKnowButton,\n        ],\n    });\n\n    Object.keys(LevelDifficulty).forEach((key) => {\n        const option = createComponent<HTMLOptionElement>({\n            id: `difficulty_${key}`,\n            tag: 'option',\n            textContent: (Number(key) + 1).toString(),\n            value: key,\n            selected: difficulty === Number(key),\n        });\n        difficultySelect.append(option);\n    });\n\n    difficultySelect.addEventListener('change', (event) => {\n        const value = Number((event.target as HTMLSelectElement).value);\n        route(Routes.gamePage, { level, difficulty: value });\n    });\n\n    getLevels(difficulty)\n        .then((data) => {\n            if (data.roundsCount <= level) {\n                level = 0;\n            }\n            const gameField = boardComponent({\n                difficulty,\n                level,\n                data,\n                standbyList,\n                controlComponent: boardControl,\n                onUpdate: ({ isWin, rowIsCorrect, rowIsComplete }) => {\n                    checkRowButton.addClass(style['game-field__button_hidden'] ?? '');\n                    if (rowIsComplete) {\n                        checkRowButton.removeClass(\n                            style['game-field__button_hidden'] ?? '',\n                        );\n                        checkRowButton.getNode().textContent = 'Проверить';\n                    }\n                    if (rowIsCorrect) {\n                        checkRowButton.removeClass(\n                            style['game-field__button_hidden'] ?? '',\n                        );\n                        checkRowButton.getNode().textContent = 'Продолжить';\n                        if (isWin) {\n                            checkRowButton.getNode().textContent = 'Следуйщий уровень';\n                            statisticButton.removeClass(\n                                style['game-field__button_hidden'] ?? '',\n                            );\n                        }\n                    }\n                },\n            });\n            Object.keys(data.rounds).forEach((key) => {\n                if (saveData) {\n                    if (!saveData.levels) {\n                        saveData.levels = {};\n                    }\n                    if (!saveData.levels?.[difficulty]) {\n                        saveData.levels[difficulty] = {};\n                    }\n                    if (!saveData.levels[difficulty]![Number(key)]) {\n                        saveData.levels[difficulty]![Number(key)] = {\n                            completed: false,\n                            words: data.rounds[Number(key)]!.words.map(() => ({\n                                hint: false,\n                            })),\n                        };\n                    }\n                }\n\n                const emoji = saveData!.levels![difficulty]![Number(key)]!.completed\n                    ? '✅'\n                    : '';\n\n                const option = createComponent<HTMLOptionElement>({\n                    id: `level_${key}`,\n                    tag: 'option',\n                    textContent: emoji + (Number(key) + 1).toString(),\n                    value: key,\n                    selected: level === Number(key),\n                });\n                levelSelect.append(option);\n            });\n\n            levelSelect.addEventListener('change', (event) => {\n                const value = Number((event.target as HTMLSelectElement).value);\n                route(Routes.gamePage, { level: value, difficulty });\n            });\n\n            iDontKnowButton.addEventListener('click', () => {\n                gameField.iDontKnow();\n                if (gameField.isWin) {\n                    checkRowButton.removeClass(style['game-field__button_hidden'] ?? '');\n                    checkRowButton.getNode().textContent = 'Следуйщий уровень';\n                    statisticButton.removeClass(style['game-field__button_hidden'] ?? '');\n                }\n            });\n\n            statisticButton.addEventListener('click', () => {\n                root.append(\n                    statisticModalComponent({\n                        level,\n                        difficulty,\n                        data,\n                    }),\n                );\n            });\n\n            checkRowButton.addEventListener('click', () => {\n                if (gameField.isWin) {\n                    if (level === data.roundsCount - 1 && difficulty === 5) {\n                        route(Routes.gamePage, { level: 0, difficulty: 0 });\n                        return;\n                    }\n                    if (level === data.roundsCount - 1) {\n                        route(Routes.gamePage, { level: 0, difficulty: difficulty + 1 });\n                        return;\n                    }\n                    route(Routes.gamePage, { level: level + 1, difficulty });\n                    return;\n                }\n                if (gameField.rowIsCorrect) {\n                    gameField.goToNextRow();\n                    checkRowButton.addClass(style['game-field__button_hidden'] ?? '');\n                    return;\n                }\n                if (gameField.rowIsComplete) {\n                    gameField.validate();\n                }\n            });\n            gameFieldWrapper.appendChildren([\n                boardControl,\n                gameField,\n                standbyList,\n                controlsBlock,\n            ]);\n            return data;\n        })\n        .catch(() => throwError('Level loading error'));\n\n    return createComponent({\n        tag: 'main',\n        classList: mergeClassLists(style['main'], classList),\n        children: mergeChildrenLists(gameFieldWrapper, children),\n        ...props,\n    });\n};\n\nexport default gamePageContent;\n","import createComponent from '@components/baseComponent';\nimport header from '@viewsComponents/header/header';\nimport footer from '@viewsComponents/footer/footer';\n\nimport gamePageContent from '@viewsComponents/gamePageContent/gamePageContent';\n\nconst gamePage = () => {\n    return createComponent<HTMLTemplateElement>({\n        tag: 'template',\n\n        children: [header({}), gamePageContent({}), footer({})],\n    });\n};\n\nexport default gamePage;\n","import startPageView from '@views/startPage';\nimport { FunctionComponent } from '@components/baseComponent';\nimport loginPageView from '@views/loginPage.ts';\nimport gamePage from '@views/gamePage.ts';\n\nexport interface IRouteParams {\n    [key: string]: string | boolean | number | undefined | null;\n    difficulty?: number;\n    level?: number;\n    reg?: boolean;\n}\n\nexport interface IRoute {\n    name: string;\n    path: string;\n    view: FunctionComponent<HTMLTemplateElement>;\n    needAuth: boolean;\n    params: IRouteParams;\n}\n\nexport interface IRoutes {\n    [key: string]: IRoute;\n    startPage: IRoute;\n    loginPage: IRoute;\n    gamePage: IRoute;\n}\n\nconst Routes: IRoutes = {\n    startPage: {\n        name: 'startPage',\n        path: '/rss-puzzle/',\n        view: startPageView,\n        needAuth: false,\n        params: {},\n    },\n    loginPage: {\n        name: 'loginPage',\n        path: '/rss-puzzle/login',\n        view: loginPageView,\n        needAuth: false,\n        params: {\n            reg: undefined,\n        },\n    },\n    gamePage: {\n        name: 'gamePage',\n        path: '/rss-puzzle/game',\n        view: gamePage,\n        needAuth: true,\n        params: {\n            difficulty: undefined,\n            level: undefined,\n        },\n    },\n};\n\nexport default Routes;\n","import Routes, { IRoute } from '@utils/consts/routes';\n\nexport default function getRouteByPath(path: string) {\n    return Object.keys(Routes).reduce(\n        (acc: IRoute | undefined, routeName): IRoute | undefined => {\n            if (Routes[routeName]?.path === path) {\n                return Routes[routeName];\n            }\n            return acc;\n        },\n        undefined,\n    );\n}\n","import createComponent, { BaseComponent } from '@components/baseComponent.ts';\nimport routes, { IRoute, IRouteParams } from '@utils/consts/routes';\nimport throwError from '@utils/helpers/throwError';\nimport getRouteByPath from '@utils/helpers/getRouteByPath';\nimport { useAuthProvider } from '@services/auth.ts';\n\nclass Router {\n    private root: BaseComponent;\n\n    private readonly defaultRoute: IRoute | undefined;\n\n    private static instance: Router;\n\n    static create(rootComponent?: BaseComponent, defaultRoute?: IRoute): Router {\n        if (Router.instance) {\n            throwError('Router already created');\n        }\n        if (!useAuthProvider().isInitialized) {\n            throwError('For a Router work, initiate authProvider first');\n        }\n        Router.instance = new Router(rootComponent, defaultRoute);\n        return Router.instance;\n    }\n\n    static getIsInitialized() {\n        return !!Router.instance;\n    }\n\n    private constructor(rootComponent?: BaseComponent, defaultRoute?: IRoute) {\n        this.root = this.createOrGetRoot(rootComponent);\n        this.defaultRoute = defaultRoute;\n    }\n\n    public static initialLoad() {\n        const load = () => {\n            const redirectUrl = window.location.href.split('/?/')[1];\n            let url = new URL(window.location.href.toString());\n            if (redirectUrl) {\n                url = new URL(\n                    `${window.location.pathname}${redirectUrl}`,\n                    window.location.origin + window.location.pathname,\n                );\n            }\n            const route = url.pathname;\n            const paramsObj: Record<string, string> = {};\n            new URLSearchParams(url.search).forEach((value, key) => {\n                paramsObj[key] = value;\n            });\n            Router.instance.route(route, paramsObj, false);\n        };\n\n        window.addEventListener('popstate', () => {\n            load();\n        });\n\n        load();\n    }\n\n    private createOrGetRoot(rootComponent?: BaseComponent) {\n        if (!this.root) {\n            if (rootComponent) {\n                this.root = rootComponent;\n            } else {\n                this.root = createComponent({\n                    tag: 'div',\n                    id: 'root',\n                });\n                document.body.append(this.root.getNode());\n            }\n        }\n\n        return this.root;\n    }\n\n    getRoot() {\n        return this.root;\n    }\n\n    public route(\n        toRoute: string | IRoute | undefined,\n        params?: IRouteParams,\n        pushState = true,\n    ) {\n        let route = typeof toRoute === 'string' ? getRouteByPath(toRoute) : toRoute;\n\n        if (!route && !this.defaultRoute) {\n            throwError('Route never exist and default route is not set');\n        }\n        if (!route && this.defaultRoute) {\n            route = this.defaultRoute;\n        }\n\n        if (route) {\n            const url = new URL(window.location.href);\n            url.searchParams.forEach((_, key) => url.searchParams.delete(key));\n\n            if (params) {\n                Object.entries(params).forEach(([key, value]) => {\n                    if (value !== null) {\n                        url.searchParams.set(key, String(value));\n                    }\n                });\n            }\n\n            if (route.needAuth && !useAuthProvider().isAuth) {\n                console.log('not auth redirect to login page ');\n                this.route(routes.loginPage);\n                return;\n            }\n\n            url.pathname = route.path;\n            if (pushState) {\n                window.history.pushState({}, '', url);\n            }\n\n            this.root.getChildren().forEach((child) => child.destroy());\n            this.root.appendChildren(route.view({}).getChildren());\n        }\n    }\n\n    getRouteInfo() {\n        const route = getRouteByPath(window.location.pathname)!;\n        const routeCopy = JSON.parse(JSON.stringify(route)) as typeof route;\n        routeCopy.params = {};\n        if (!route) {\n            throwError('Route not found');\n        }\n\n        const urlParams = new URLSearchParams(window.location.search);\n        Object.keys(route.params ?? {}).forEach((param) => {\n            if (routeCopy.params) {\n                if (typeof urlParams.get(param) === 'string') {\n                    routeCopy.params[param] = JSON.parse(urlParams.get(param)!) as\n                        | string\n                        | boolean\n                        | number;\n                } else {\n                    routeCopy.params[param] = urlParams.get(param);\n                }\n            }\n        });\n\n        return routeCopy;\n    }\n\n    static getInstance() {\n        return Router.instance;\n    }\n}\n\nexport const useRouter = () => {\n    if (!Router.getInstance()) {\n        throwError('Router not created');\n    }\n    const router = Router.getInstance();\n    const routeInfo = router.getRouteInfo();\n    return {\n        root: router.getRoot(),\n\n        route: router.route.bind(router),\n        args: routeInfo.params,\n        isInitialized: Router.getIsInitialized(),\n    };\n};\n\nexport const createRouter = (root?: BaseComponent, defaultRoute?: IRoute) => {\n    Router.create(root, defaultRoute);\n    Router.initialLoad();\n    return useRouter();\n};\n","import 'normalize.css';\nimport '@styles/index.scss';\nimport { createRouter } from '@services/router';\nimport Routes from '@utils/consts/routes';\nimport { createLocalStorageProvider } from '@services/localStorageProvider';\nimport { createAuthProvider } from '@services/auth';\n\ncreateLocalStorageProvider();\ncreateAuthProvider();\ncreateRouter(undefined, Routes.startPage);\n"],"names":["removeDuplicates","arr","item","index","BaseComponent","props","__publicField","_a","_b","tag","style","classList","textContent","children","__objRest","__spreadValues","node","key","value","stringValue","child","addedNode","type","listener","options","classNameClassName","classSurname","className","result","component","callback","resolve","_","obs","err","createComponent","logo","TextStrings","mergeClassLists","classLists","mergeChildrenLists","logoComponent","logoImg","logoText","throwError","message","_LocalStorageProvider","localStorageState","proxy","obj","target","prop","tempTarget","LocalStorageProvider","useLocalStorageProvider","createLocalStorageProvider","_AuthProvider","name","surname","state","error","user","regExp","session","savedData","userExist","AuthProvider","useAuthProvider","auth","createAuthProvider","authActionComponent","isAuth","logout","route","useRouter","authLink","Routes","header","authAction","content","bannerComponent","imgSrc","image","bannerImg","logoLinkComponent","altText","linkImg","rsLogoImg","gitLogoImg","buttonComponent","startPageContent","aboutGameWrapper","footer","startPageView","loginImg","loginPageValidator","str","strMinLength","loginPageContent","args","login","singUp","reg","nameError","surnameError","loginButton","evt","nameValue","surnameValue","func","reason","loginForm","_c","_d","loginWrapper","loginPageView","texture","waitImages","images","onComplete","loaded","applyDragEvents","standbyList","fieldRow","dragOnCallback","startX","startY","dragging","dragStart","e","fantomNode","nodeStyle","nodeUnderPointer","translateX","translateY","_e","_g","_f","_i","_h","lastX","lastY","dragMove","eMove","pageX","clientX","pageY","clientY","dragEnd","PuzzleComponent","word","baseSrc","additionalSrc","imageComponent","disabled","puzzleComponent","baseDataImg","additionalDataImg","onUpdate","puzzleText","puzzleTextWrapper","puzzleImg","puzzle","beforeItemWidth","totalWidth","strList","itemWidth","drawPuzzle","col","row","totalRows","textExample","extraWidth","imgNode","imgRect","textExampleArr","tempCanvas","tempCtx","extraWidthCopy","h","fillBoard","round","cartonTexture","rows","rowList","puzzleGrid","rowElem","puzzleList","array","canvas","extra","cartonCanvas","arrayShuffle","arrayCopy","i","j","loaderComponent","MergeClassLists","BoardComponent","boardComponent","difficulty","controlComponent","level","data","saveData","loader","rowElements","currentRow","boardText","puzzleWrapper","board","usePuzzleSrc","nextRow","currRow","goToNextRow","onUpdateHandler","currentItems","currenRightAnswer","currentText","validate","rowIsCorrect","rowIsComplete","rowLength","list","grid","baseUrl","LevelDifficulty","getLevels","difficultyPath","url","response","levelData","words","_PlayVoiceButtonComponent","soundSrc","audioComponent","PlayVoiceButtonComponent","playVoiceButtonComponent","BoardControlComponent","playAudioComponent","translationComponent","showPuzzleComponent","audioSrc","showAudioTranslate","showTextTranslate","translation","clickHandler","boardControlComponent","audioTranslate","audioHide","translationBlock","translationHide","showPuzzle","hideControlBlock","statisticModalComponent","levelsWithOutHits","levelsWithHits","continueButton","withHintsTitle","withOutHintsTitle","levelsWrapper","miniImage","hintUsed","levelComponent","statisticModalContent","modal","closeButton","gamePageContent","root","boardControl","gameFieldWrapper","statisticButton","checkRowButton","levelSelect","levelSelectLabel","difficultySelect","difficultySelectLabel","iDontKnowButton","controlsBlock","option","event","gameField","isWin","emoji","gamePage","getRouteByPath","path","acc","routeName","_Router","rootComponent","defaultRoute","load","redirectUrl","paramsObj","toRoute","params","pushState","routes","routeCopy","urlParams","param","Router","router","routeInfo","createRouter"],"mappings":"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"}